<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhtACWAIZjAPBjHDR1qQFYngFZpP7///JnJNTi6+jy9/CxjwBTna7K2/T8/bTQ4nWkx+llI/TK
        ssra5/XZxuZ5Rvfi1J5jWO+Xa2xeammYve2HVkB1n/nx6BtkmvFeFUiDsxNdmiltogBOmPrq4QFTlIGq
        yZOWpfv+/lKItOHs8u9pIpW71tBoPhpmqDhZhe15QN7n7gBKjv359fD3+eZoMvG8ofClgPJmKV6QuPhk
        HwlSjRtYjpm3zgNZmQtWkwtcnnugvYqz0f79+u9zOkV+qvz28O309o2zy+9vNV+FqQdWm/JfIAtZk6G+
        0f37+Pj6/O1pKvX4+vT48PdxKPf9/c+nlPhpG7tkRvdjKqXE2OhuL/dpJwBCg/v8/Tt7r5XK6eiNYuSV
        b7+XiL3V5NG+rf///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQB
        AABjACwAAAAAtACWAAAI/wDHCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJ
        kyhTqlzJsqXLlzBjypxJs6bNmzhz6tzJs6fPn0CDCh1KtKjRo0iTKl3KtKnTp1CjCmzy5EmMGESIXI2x
        BQgQAlKdEiDiIowOH0ICbNjggQcPJR5yfDjyhcaDCDDCGiWwhQCBETl4iAAhIgGSBAISD0gsQMQLFlU4
        cPjCZEyICH318iQwJMKXEGNSgEgwYPEOJEh2CNjBWvXqHjtyWJCRhAYQIhKC0JiQV7NNICEQGOFAo4QC
        xIwVL07OuPSOAbFZUJhigoSEKhYozADtOyYBDRWSJP/h4AWKCxbQmS9n3lxA6cQJcuAYsEFLjipUZGzv
        3vI7DRQAOOFACyFIUYEF77GnoHpuIQFdAhuMUIUMNwCQhAwIVDYGWPyRRAAMCDiRhBU1OJBFBFIgUAAF
        iCW4oIKqDdBDfBaIQQACDshQQBYYYMbEFh2WFIIEHFBB4g1JzLBABE7cYIEAPJTm4HLrvcgYZFm0MAEQ
        U7BgARgwbDEBBhhM4BeHQXL0FRAReGFhDQBUsEAILThwAwWm4eAlgulZyVgCFERBRRIYAHEFDhA2EAAF
        klkxQwlpdqSBFzRoMAZwNFAhgQZQVFBkDRTIRsGEMmQRKpV+DiCqBRYcEYBhg4n/YEEUKNzAQQW9RYrR
        BEEAECANIQAhxQQTLIAABwBQUYMMKjiRxbMoyEBFFUqUVuWCSKyWQAKFQQcdDzmocIMTBRDKna4ScRgB
        FkmMWy4AGDxAhBQLzICBDA74SkUBVtxQgL81ZFFFDqT52Z5pAjgI2wBV3FBDAeUGAZpf6D4E1gROoFCr
        FRDDyYG8EUAhRQgPzPCFBFigkK94SQDAQRVcVGvwtaXh0EMOLKhQAAoFPAxAFqABUXFDYDGZBBU8d1yu
        F8YOWAECd4UgdQQRPFAyAgjQMEMRHyBncHLQIZFzkyR2XKIR5w69UAjkOlEDx0nXgEIETbSArMvIYtFC
        BTRA/0211CGc9zV7D15Aww03aOxvzzsDgIWlaivEBAYcOLEvxE2iQKgUEdgJ8ecFuOwrsihggUUQFCjx
        3OCrQbeDBRqw/XnSEPMMgBdCR37QjQBAfPnOOyfxwBgIAPAw6J8/7DPiVLDo2uClKWGBEzNI8QUHDh/f
        cb8AzKD7QRN4jvzOVAQBBBO9aj++8jU8TIUKGzxvMGo9UIA4BlI84MC/6jN+AxZp+x4QvJAEchXAgAWg
        ghMAQAMCRCAJtANeAhnXvxYoYD7eYky2FJOc+2RBbliIgAYkkCzkKZBnSagAxb43hgkkoX+fcwIHMEOD
        3jnMYUnoGM8QB7obBAEGIwDBAP+UkJrVoGY1rCnNBvDjhIxxYAZbCA/SxvcvjUHuewSowP6oCKcbBItI
        DnCCEYJgBCzkCwAOaB/HPgcACQDBBTnIgbd48JwdeIAFeGTBfRCXsQp5oQQzAMDiuMgBBKApchqgEBVD
        5wAJMAEGD5iABmIHuMsgAANGcACy2OjGCFgAj9FT1ahk4KwoSCcL5MpeEDQwAQDUiopN+l+u1EaAGdjp
        YTwjFwS9MIMrKoQzE0AACW0oAc4BIDvoeY4FsnADKkyxCvjhX/sAEAEiGCGCyHMYNQWoRRRYQXEcwAKw
        ZvkQJkQAA4IsVAQ4oKMqDMBBFkCaCiigAhLtq4m16x4Q0An/w8/dwAE0GMghIwWDIDhghwVEgAYGKhEg
        HOuPDxBkDbBggdTUL1QskAEKqDCuZroNBYUsgacWqbFySYChugoBCjJ3uxBwaIUKAcIkh3DIEPDSUiHA
        QLnGhR0WICFKssFPDagAreBVoAQ0yCFJ25eFIeguAsZLAhYeABaUHgQIE6hAtCRAgwgQCwFeCAGkBIKp
        fP1PBtjJgRAtYAQVVIECFMAC0ghVgmO1rEJ4FSSSCjBDSFmVP1CNky8dsoUZEEkyEkDADOyioYKwCQNZ
        MEIUTjdPPbKgLTaDTBSiwLQZOCEKRgitaEdrBBlE4ExD098DcpcuJpSMNw4BwhCGwITY/2lgCFAYAQ5O
        Q0ck5IAEQwgBFGIw2+Ia17gayMtfARuBlZTgajSILg1IsIMeWEsJ1iWBkiIQXax597tYq5TulhsSv8yA
        A+PJ18Bw4CDUhE0LRyAADTigScnY977jaS4LV5JIb74PPe69FhJGIEWlga59oQvgfk0yBCMYz0nvjFFy
        VFOYZS5SaU4Y7II3QoCvbGEIMIABE4bAJgdYQWDV6i1zXKOqKmDzwDdowVc2zOHOIOALBJiA3lrQAiN4
        AZ3NVAELBNCDnyronQNgARZ6ljgYO0CF5KVxQ7BKAwnIUAItxJ6vQgdBjTVPCey9FmOeAyikGenAKhue
        lC1CgBBUwP8KDrDTDTCQY6Umb6XfpAKfxOye1KhKBRtFntysAIU1VwQKCEjCQfm1QAyIqXfJq924ojVk
        +TUHNTxIgAUQF0HNNdDQE5lAnSJYITpDtX3aw2XiBFZEwhU5ySrYl/rgNAFQR8SBRmgX8gBk6mTt63eg
        c9yQV+weAcjGCsoa361Ya2uGEOABXawB4mpgQA6o84XA8xc2HYAemhm7YclWX4UU3GyEPHs8LlP0GVfq
        AHU2sQbq9tWWd6QCOa44NhQwUsb6V8goN7vDtpQBBp42g7t4lViSvFQIKCm1ByCgAkYI3Q2q4KDErE4E
        pwQ26FJYGX+DugQTsEuwpPCEy5RsBoqZhRpnUh7J234FBhOYgRdY1KcEKOEI0qIi0gAQBKeWeyFgKcEC
        NMBdL7TAjHhDFgdO+sAc+soBeuuqBpgABB8YJolK0IGnsgBLf9X650AfgszNOB7s9SxpvMZqsjQm7RtY
        Ab01aAECjpAA2OwgAT6IQOL6aQUn6Bfsv/QUB2i3xmwWyoUGPjvE8sWCV+9ACRA4FgfkljQ+yoCq/4Bf
        CBBI2E/DOxDSFy5AMncAgg7MiQZY6B2JUFCiGpjJ4+WGQQs4+mLPtzL0WZBBDtq7AwUgIAQLOAENFvgv
        DrRAw5k/yOQAUPgLzxnkoKfiDVSQGiSI4ALhkfsQQO6FONOAnMk39xcEWfsemjr0/5IBC+7eAzAkTpMt
        mAGIrcbs8CeklhxAP8Sef/sL80wFHiACPCAuHCUgSSABLmV/D6EB16R/c+ZA+ic8XfBTzdIk9OUFZqKA
        DgEWMwBB6PeA/bdIAIAAJRABFGAB4kJfFZCBAgF7yQcWUUQ6tVNSGsNrbeZKPMMzuARvj0InDsNOuzFQ
        Lhh+BOBauRZnFbIzPP9jBYQCHIL0L9rGev0GBUFQOfGyUBqIETAQAQ+HAVjgNi2TLxjABCGAPRUSZyyD
        AF6xWBFAUy04hFmIEOdDdCVDA0anQiEQBC2AAXtIKTMQAV9RAkIDh3E4EY+UFx/WBFQnYmjSiIRYiJAY
        iZI4iZRYiZZ4iZiYiZq4iWPQBFmhFQdABChFAKGYFVjxBOYWAwdwACcQA1KgEFuwiqsYA8ulip8YighB
        BKX4iUSQGQUxFrx4AKi4O6ooi/VXEJ54AMtVArqojI+4EBekBCLgGB8AJAbBBAEAZi/gGDaAECUQADiA
        A9uYARCQEAbAXo6hBBcQAwkxAiJgfY6RASjlA1r/IAI9II0ioAUKYBAdtgGCMY0voAO7IwUfYH0vwAMd
        4AIJoQM4sAFS8FcQEI49cAIgoQAg0AMNcAE+4APHOAbfmABcMAIbeQXe+CopEAYmAAJKcAAIEQb2+AMM
        8AFaYANjZRANAAIf0AA6qQMdqQAmwAU9IAABYAMmYAAbUhBb0DVcoJMNEAYIIQUrIAI/cAVCAAIbMIwG
        kQIisAI1eRANIAIekAAk+REK8AJcwBDf+AIMwBBSEAAigIpPEJZOeRAMYI9NMAZXACHWaJMg4AMM8RVt
        +QIKUAJdSRAl8AEgUI4wZRBbEJUseQBKAAIUeRBa+QGFSRBPsAEfkJcBsJcc/2GRH2AAokkEJSkCNsAA
        CqAALHkQH3kCT3BBG0CadLmVLhADNvACHIkQNykECnAFV2CUCbEFXAAC+5gQh3l9CvADDSCbBrEAK4AD
        BhADOvACH3CXlCkCH/CKCAEBL9AATYCYCukRx7EDLwACWmACKPWNA+AYL6AFa8mar+IWCbACkzmbPeAW
        IGADHSkQDYAYINCefpkQTxAAgqkQhwkdWtCewMmYK0BkSICTq3mdlmluF/ACTjkCL/ADZAkhV5ACKQAB
        HfmNIDACLiCaWFkQ6nkBF2BHC2oQddkDPmACIiAE1umVL2ACJWoAEXoQTRAAxGmgiPkDOVpoB7EAXXMB
        Nv8AIfWZldipnQYRlwJgAj7wKp0pniDABeRVAhlgoWwZAEggirtpVXXpAQsgosVpoyPgED36o8aJmOW4
        EE2wAi+gjLdpA1ZVmZcpEBBQdxuwAiuwnkuqERYZACcKn/kJARAQBi6Qnq9Cmi5wkMxZEC/KjjeJnrpZ
        emGAqCAqoD56pqzZNQ2QqBAQngYBlUigkGEAAh5QowVRmU5aEA3wAhewBSXwBEHaEQRwBVpwlZq3AezZ
        ntXImnLKkk/QA/rYki+ABOzIAFrAA5FKEBX6n+2ZA6yKjDI5lt6YA+X5Au0ZXwchBTmgBUZ5AOI4lwbx
        Ay/gAb5IEE3AA+55lCOwq9X/ehEEcAIKAAGeuTthoAAM0K8MYADH6Bf7CiQEAAG/iVJEwK990QSpyY4H
        YQD82q8KEAbzKlD7Gqi/6K8S26KGiZp3SQBhcAWkWhAGkAJXUAIM9ZoMUKMJewUVy4kwC2rPSGMzG7M2
        e7M4SzQoi7ICdSZ52rMwdSZCO7Q8S1YoO7RCa25Hi1oEsZjpkrQbQgBHW7RNC7VVBbUksQUuwABF0AA2
        8LUmMJd/cQRg+55VqwMm8LVHAJxN8LVu+7ZguwQccgJpC7dv2wBXsKOd+LYm8KYeyQBI6gMaOQKEu5EK
        gFJbcAJcm5FxOxBXULc2MAKHdABk67YK6RdFULca+QNh/3AC+aoRTXAFGYADg7Et25KfQUegA7AtHlCo
        BOAC3FIYbBoDjcEttlsYuOuQAmEAL2C6tuu7IKCqS1CTRHAYhaGWA1GWvnu62/ICS2AQDBsAPBC8o2G6
        qyoQQWS7IGC2Y/CoppuYAkEESrC8wYsDQsAAP0sRBrClGpQarCEASsCOW+CW3/ICKfCLdNcaIvCeMWB3
        7tsa7osEk2kAItAaBmzAiQEC2AqZizG9YpukB7wa7sEDeusCPuoe76Q6rQEC4TkCiLEDPIAEK+CwY3AC
        BfwcPPCmOvCOB7w6CSAEelsRYZBp8FtE8gMCz1sCXEAapQGWqwkWEOA67rG9AnECHv+wGO9kugKAHAq8
        u4gxJS5SbIdxvWMQAx6AwSAwl99YwO8xjYNxpYcEATwwwSyWHAnwA2ARRM+RLX05t8+RxOUIBPS7Os6B
        wnXHsRMBAUqQMNYyjcyBBEIABPPLxaWBm1VVAkIAv4yxvwLhAlesGH76AZI8yT4AFgZgGBOsmWuBQYwB
        vlX8yKQntlwgAu/xAR1wyh1wvgThApnGYtzyxxkgNB58w296AnxMR+UIR3S8utuCROuZAxgLEUTQoAmz
        xB4Qua+SwA3wBATQoxuEwUiwmgwAAo+3HETcvY/cGOi7s4TZBJlxyacBvycgLE0QBtksANd8AEecwHMp
        BaMMHcT/WQJSMM9UywQfsBjZApZCYANdkxgiEACiOAZqbMbBegJ+hssbcgIbUGwCkAE+0AEzAh2FUaUT
        QQAmkABJJAI+wMwCDQIJnKZjMKBc7BrXNwYEKcEX956OvMh4TBCXnDCsQcJjIKOd/KaObBpZ3IKvMkQJ
        wL0FscJJhAMZYACCaAMenRgZYJ2zDDYgUAQlfMs78KaHqRqHcb/1OsqdjK0Rccl09BwmkDsEcJPwAdLO
        vDqugQMucAUvoBgkrdLZvL+1WhVVsQAccslFpASe680nQMz+vJrq7Bw57ZFYfRg+PRCZOQBRIgAfoIwe
        eQFHnQCEir0YDTY/tYoblBpvCgQf/zDBCSCQAhED9wzTG/Cyv5SkeywAOFCfBGDUHy0QA5ot67GeasHQ
        i+zWzbECAZDbuf0BNNrIyPFTkhwAQpADhAwCX/3Z63x3YhsAEnzNLkrN7/QCJHkmjs0YkS3Qk31pCVCU
        UdIaUr3ZSezZAlGW6ZEAfvsQ/es69NGKWXEAKTnWU+GWQTlhFsce17zSifFTiDGNpGepY2DX8rO6ymFz
        9fnX8KzFWE16hb0hRl1HHsAA7e3ej33dS90cdSQE1uXdLQjeDzoCMWAVT6DH5R2gELGn7ysjbLEWPTDf
        6AzSr03bSPS+zCECxYnfYPPGND4QL11xj1dEi5EAOAABaHLTq/8R2ATA3Kzh3ASxABuA2M7hAR7QA1Eu
        PxT+jurhz/mN2QJxmIqBBHAR5VBud7Kdvr8oEFcAAhs0xjzcavDdiW5paX0yZgls28nhx4WR2jqOyUmE
        wf481AVBBEd84Fue4Eo+EEaMRLC9Hs8D2cO41A7iGhJmRFG94XyMRDAtJavjATLdED9w1Bw0xvbt4l7K
        ZwvCyNisQSvABRmg6h9gAnv50kHpAeDdHHhsxRZn5Mw95wdhwhaHz8/MHBSO0ayxAqFtaVrukZtt6VRy
        GlOSMDG8EP2pQadbvV6TAGT95s4B4+mxHKZu4zS+Bd7szV0Jzonx4P0MH5VcEFYM2AguAkX/vuAu4O6t
        88UJELxmHOxJ1AFhYBoyDtNvSgCbzRpRMu3c0uwiEMwKEUSKIQJFEAYMEAYOj9Ut7tpe6h47sAEszhge
        wNfdns0JYK4P+8Hv1AQvneUg/8m3vtydvOC87s9NCfH7msyJUeWrIQJcAARAXSXHzuVkZgMwH7Im8E7u
        IQLPrhCdrkF6q/BLfO1cLAINUAQeze0MQNPoTOeNIeSLSTHknjCiCPXvmwCaThAGHso6nd+BXRAnkB6H
        cd4dDR/4LttSKwSYrEGTviEB3xjPK1Bnnt89UPQJYZEsXRAe3NohXfHrOQKZycLGvQUdgBw5fuqMwQVf
        2wAjQPkZSZEl/w+/LNmj8o7O6V7EyR3YOpzfA0CiBoCoizoGw0wadyfe2Ovpb78DkX0CUfLMOw/erS/4
        pJwY1bnVnn72r9/mnE9mFzAGdVkaPLCoMn/f51wY9U69jsGSYSDsRLaaBBw267mggM7uW/4qMYIapwHk
        LAkEHbD7L9yVSs/oku0a160D2e3vlM4anW2YGVBsCWCnGwgWRLAeJU0QADEigQABIEaMGfMkgIgBA0A0
        GEPgSAIQOsaU4EJQgAgGCE/00DhAyQ4BJAkmCABkjAIkGnkcQEiggYgdSAaI+FACYQwPBHeACIOwSYAE
        JFsKQLLj5wgCY4q8aFiTCEKEAjV+eFJVhP9NEQEWCM0wkGBSCAilfEgwYIcIi1RdiCi5sUhTqnXtxrwY
        QACPhkqmRpQJQoBDiAkD3CxY2EWCD1vGbBEycMeLjmOI7BgoVuNJEHPHMMg8GGbTJhsyO1zSNEYPhgJe
        KIh5QXBcjSR7xBhjAMeAwZ2bEgh8MkOTqiBaDvhAHKGBuJgTlH1sGmmCFFRlvlCKBMkJune9U9VRtLcN
        nQgb4PCghMcFhCWEeIDvoTABH9BLdEDiYQMP6DE2xAcwQAMQgoAH+HpY4S8Cc4ivBw9g8o/BHniADaED
        hOBBBJoyU+qFJfJKIAEkQMgBt4ga4EEJD5DIoLwReJAwA5UAG0HF+KD/a+KDAZDIgYe2xjiAhwREGJKL
        8r5D8gQleLNphwueIO0EF6SEaacDrjzAxIu6iyGGA044wLGIsCSzzAPo2oIIIg5Qs7sxsYyBiKwIuJKI
        OJWLiYgT9jzBAAggMMAAFyyEoE8DTsCTiCmnrHIML7FUMKYyjzxhTRdcyAohKE6Ik4hDkQQ1ohGgamjE
        DYpwQQrggIuoBFZXjci6VVmNCdZZb32VAFfrwrVXW2ctAQhX3awLCJUIcIxWwHb19dZYWx1WV+C22CJa
        V0vAFtdhxQz1LiA6SGtHkEBIYAMuOkDXhA7UXTfdDnxwTId0TRBiXXbvRTdffd1t14RBT7BXXRPY90X3
        XHzzHThhgTsQ4sMxdDDY3nknJhjhgQtW9wLiDAiAC48/5kIIITzuGGSPRwZ5ZBu6/e4JIUDggYfNQqSI
        ZptDFAGE4caQ7WaaybUZaKFDBJroHcoyQEMNby46aJ99BoG9MWxo+mmmrR5SQw+yCuMFrK+2eukNWP6u
        CR/SknmzkBpiO6oEhCDuAobaprtu3tQejG0BekC6JJMIsjvwwBMo7IJwBW97M7v9XoFruNZuCG/AF7fp
        A7K/KyEMLnIOUYCbPc8sdC4cG0Gwzk8PHXTQn159hwENkCx11FWfvfaoEeqZdtlDt1l3gkRYgbgwmtad
        Zt9PB93H8su/2wKCEYT4YIUNpqe+euqVsKGpIvSzvnvvv6ceNwMYBL988D3wQVcfuDe/feo9SG4MCHJw
        33z9PBBi+VAJkGIB//8H4P+esIBjSUEKWwhgAhW4QP9t4TdNYGAEJSgFs0jQggGMwQJg8JsLdnABeNJf
        CEU4QhKW0IQnRGEKVbhCFrbQhS+EYQxlOEMa1tCGN8RhDnW4Qx720Ic/BGIQhThEIhbRiEdEYhKVuEQm
        NtGJT4RiFKU4RSpW0YpXxGIWtbhFLoYwIAA7
</value>
  </data>
</root>